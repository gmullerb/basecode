//  Copyright (c) 2017 Gonzalo MÃ¼ller Bravo.
//  Licensed under the MIT License (MIT), see LICENSE.txt

ext {
  assessMainCodeConfiguration = {
    description = 'Analyze and assess Main code.'
    group = CODE$GROUP_ASSESS
  }

  assessUnitTestCodeConfiguration = {
    description = 'Analyze and assess Unit test code.'
    group = CODE$GROUP_ASSESS
    shouldRunAfter CODE$ASSESS_MAIN_TASK_NAME
  }

  assessIntegrationTestCodeConfiguration = {
    description = 'Analyze and assess Integration test code.'
    group = CODE$GROUP_ASSESS
    shouldRunAfter CODE$ASSESS_MAIN_TASK_NAME, CODE$ASSESS_UNIT_TEST_TASK_NAME
  }

  assessTestCodeConfiguration = {
    description = 'Analyze and assess Test code (Unit & Integration).'
    group = CODE$GROUP_ASSESS
    shouldRunAfter CODE$ASSESS_MAIN_TASK_NAME
  }

  unitTestCodeConfiguration = {
    description = 'Runs the Unit Tests.'
    group = CODE$GROUP_TEST
    shouldRunAfter CODE$ASSESS_UNIT_TEST_TASK_NAME
    doLast {
      logger.quiet "See unit test report at $testReportDir"
      logger.quiet "See coverage report at $coverageReportDir"
    }
  }

  integrationTestCodeConfiguration = {
    description = 'Runs the Integration Tests.'
    group = CODE$GROUP_TEST
    shouldRunAfter CODE$ASSESS_INTEGRATION_TEST_TASK_NAME, CODE$UNIT_TEST_TASK_NAME
    doLast {
      logger.quiet "See integration test report at $reportDir"
    }
  }

  testCodeConfiguration = {
    description = 'Runs the Unit & Integration tests.'
    group = CODE$GROUP_TEST
    dependsOn += [CODE$UNIT_TEST_TASK_NAME, CODE$INTEGRATION_TEST_TASK_NAME]
    shouldRunAfter CODE$ASSESS_TASK_NAME
  }

  checkCodeConfiguration = {
    description = 'Runs all checks (assess & test).'
    group = CODE$GROUP_VERIFICATION
    dependsOn += [CODE$ASSESS_TASK_NAME, CODE$COVERAGE_TASK_NAME, CODE$INTEGRATION_TEST_TASK_NAME]
  }

  assembleCodeConfiguration = {
    description = 'Assembles binary from Main code.'
    group = CODE$GROUP_BUILD
  }

  buildCodeConfiguration = {
    description = 'Tests and Assembles this project.'
    group = CODE$GROUP_BUILD
  }

  docCodeConfiguration = {
    description = "Generates $docType documentation for Main code."
    group = CODE$GROUP_DOCUMENTATION
    shouldRunAfter CODE$ASSESS_MAIN_TASK_NAME
    doLast {
      logger.quiet "See documentation at $docDir"
    }
  }
}

task "${CODE$ASSESS_TASK_NAME}" {
  description = 'Analyze and assess code (Main & Test).'
  group = CODE$GROUP_ASSESS
  dependsOn = [CODE$ASSESS_MAIN_TASK_NAME, CODE$ASSESS_TEST_TASK_NAME]
}

task "${CODE$COVERAGE_TASK_NAME}" {
  description = 'Calculates code coverage'
  group = CODE$GROUP_VERIFICATION
  dependsOn = [CODE$UNIT_TEST_TASK_NAME]
}
