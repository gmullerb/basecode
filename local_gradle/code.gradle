//  Copyright (c) 2017 Gonzalo MÃ¼ller Bravo.
//  Licensed under the MIT License (MIT), see LICENSE.txt

final ASSESS_MAIN_TASK = 'assessMain'

ext {
  assessMainCodeConfiguration = {
    description = 'Analyze and assess Main code.'
    group = CODE$GROUP_ASSESS
  }

  assessUnitTestCodeConfiguration = {
    description = 'Analyze and assess Unit test code.'
    group = CODE$GROUP_ASSESS
    shouldRunAfter assessMain
  }

  assessIntegrationTestCodeConfiguration = {
    description = 'Analyze and assess Integration test code.'
    group = CODE$GROUP_ASSESS
    shouldRunAfter assessMain, assessUnitTest
  }

  assessTestCodeConfiguration = {
    description = 'Analyze and assess Test code (Unit & Integration).'
    group = CODE$GROUP_ASSESS
    shouldRunAfter assessMain
  }

  unitTestCodeConfiguration = {
    description = 'Runs the Unit Tests.'
    group = CODE$GROUP_TEST
    shouldRunAfter assessUnitTest
    doLast {
      logger.quiet "See unit test report at $testReportDir"
      logger.quiet "See coverage report at $coverageReportDir"
    }
  }

  integrationTestCodeConfiguration = {
    description = 'Runs the Integration Tests.'
    group = CODE$GROUP_TEST
    shouldRunAfter assessIntegrationTest, unitTest
    doLast {
      logger.quiet "See integration test report at $reportDir"
    }
  }

  testCodeConfiguration = {
    description = 'Runs the Unit & Integration tests.'
    group = CODE$GROUP_TEST
    dependsOn += [unitTest, integrationTest]
    shouldRunAfter assess
  }

  checkCodeConfiguration = {
    description = 'Runs all checks (assess & test).'
    group = CODE$GROUP_VERIFICATION
    dependsOn += [assess, coverage, integrationTest]
  }

  assembleCodeConfiguration = {
    description = 'Assembles binary from Main code.'
    group = CODE$GROUP_BUILD
  }

  buildCodeConfiguration = {
    description = 'Tests and Assembles this project.'
    group = CODE$GROUP_BUILD
  }

  docCodeConfiguration = {
    description = "Generates $docType documentation for Main code."
    group = CODE$GROUP_DOCUMENTATION
    shouldRunAfter ASSESS_MAIN_TASK
    doLast {
      logger.quiet "See documentation at $docDir"
    }
  }
}

task assess {
  description = 'Analyze and assess code (Main & Test).'
  group = CODE$GROUP_ASSESS
  dependsOn = [ASSESS_MAIN_TASK, 'assessTest']
}

task coverage {
  description = 'Calculates code coverage'
  group = CODE$GROUP_VERIFICATION
  dependsOn = ['unitTest']
}
